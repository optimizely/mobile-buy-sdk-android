// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'

    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    // These variables will be set here so they do not need to be set as ENV variables
    rootProject.ext.bintray_user = ''
    rootProject.ext.bintray_api_key = ''
    rootProject.ext.version_name= ''
}

allprojects {
    repositories {
        jcenter()
    }
}

// This allows the test app to control the versions of the dependencies that the android sdk is built with without needing to modify code in the android sdk repo itself.
ext {
    compile_sdk_version = 24
    build_tools_version = "24.0.3"
    min_sdk_version = 10
    target_sdk_version = 24

    java_core_ver = "2.0.0-alpha"
    android_logger_ver = "1.3.1"
    support_annotations_ver = "24.2.1"
    junit_ver = "4.12"
    mockito_ver = "1.9.5"
    support_test_runner_ver = "0.5"
    dexmaker_ver = "1.2"
    espresso_ver = "2.2.2"
    gson_ver = "2.6.2"
    group_id = "com.optimizely.ab"
}

project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}
